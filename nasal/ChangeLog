Nasal 0.9.2, 2004 Dec 06
------------------------

Bug Fixes:

Runtime errors due bad function setup information could cause a
  nonsensical/corrupt stack frame to be exposed to the calling C code.

New Features:

Support for multiple naContext objects has been added
New call() and eval() functions in the standard library

Nasal 0.9.1, 2004 Jun 26
------------------------

Bug Fixes:

Removed an optimization with function arguments that had no
  performance impact in practice.
Fixed a lexer bug where DOS (\r\n) newlines in source code would be
  misdetected and cause incorrect line number generation.
Fixed a bug where the "me" reference to a method call could be
  prematurely destroyed by the garbage collector

New Features:

Updates to the Vim syntax highlighting
Changed the naCFunction callback type to include a "me" reference

Nasal 0.9, 2003 Dec 03
----------------------

Bug Fixes:

Parser precedence bug with unary negation expressions like "5 * -1".
Properly handle "optimized" assignment of function argument vectors
  for nested cases like "a(b(), c())".
Fixed boundary checking in naVec_get().
GC bug on interpreter entry: the arguments to naCall() could be
  collected before being placed on the Nasal stack.
Lexer fixes to properly support "\x" escaping in double quoted strings.
Lexer fixes to properly support "_" in symbol names.

New Features:

Stack trace support added to the C error handling API.
Added a math library.
Library functions: delete(), setsize(), subvec()
Lexical function binding can happen from user code via naBindFunction().
New naSave() API for explicitly caching references to preserve
  them across garbage collection.
Vim syntax highlighting file contributed by Melchior FRANZ.
A new "ghost" opaque handle type, which wraps a C pointer and provides
  for a callback upon garbage collection.

